---
import { CheckedList } from '@/components/CheckedList'
import Container from '@/components/Container.astro'
import { EcosystemNetworkChart } from '@/components/EcosystemNetworkChart'
import Layout from '@/layouts/Layout.astro'
import { IndexLibrariesSection } from 'src/sections/IndexLibrariesSection'

const ENVS = ['Browser', 'Node.js', 'Hybrid', 'SSR']
---

<Layout>
  <Container class='relative flex justify-center items-center' style='height: calc(100vh - 80px)'>
    <div class='z-10 max-w-screen-lg w-full flex flex-col justify-center lg:text-center gap-4'>
      <h1 class='text-6xl'>Make your ECMAScript development experience a breeze</h1>
      <p class='text-2xl text-slate-300'>
        Tired of rewriting the same boring code all over again? Aracna abstracts all the essentials for you without bloating your codebase.
      </p>
    </div>
    <div class='absolute w-96 h-96 rounded-full blur-[256px] bg-blue-400'></div>
  </Container>
  <Container>
    <div class='w-full flex flex-col lg:flex-row items-center lg:rounded-3xl'>
      <div class='lg:w-1/2 flex flex-col gap-4'>
        <h2 class='text-6xl'>Seamless modular ecosystem</h2>
        <p class='text-2xl text-slate-200'>
          Aracna is split into multiple libraries with a clear context, these libraries are fully modular and no unused code will ever spill into your
          production bundle.
        </p>
      </div>
      <div class='relative w-full lg:w-1/2 h-[512px] flex justify-center items-center'>
        <EcosystemNetworkChart client:only />
        <div class='absolute -z-10 w-96 h-96 blur-[256px] bg-slate-400'></div>
      </div>
    </div>
  </Container>
  <Container class='relative h-screen flex justify-center items-center'>
    <div class='z-10 max-w-screen-lg w-full flex flex-col justify-center lg:items-center lg:text-center gap-4'>
      <h2 class='text-6xl'>Just works everywhere</h2>
      <p class='text-2xl text-slate-300'>
        You can use Aracna libraries in any environment, they are designed and bundled in a way that will make them work even in more complicated codebases.
      </p>
      <CheckedList client:load className='mt-8' itemElementProps={{ className: 'lg:-ml-12' }} items={ENVS} />
    </div>
    <div class='absolute w-96 h-96 rounded-full blur-[256px] bg-lime-400'></div>
  </Container>
  <Container class='relative'>
    <IndexLibrariesSection client:load />
  </Container>
</Layout>
