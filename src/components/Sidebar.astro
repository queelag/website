---
import { concatURL } from '@aracna/core'
import type { Dirent } from 'fs'
import { readdir } from 'fs/promises'
import type { DocsPageMDXInstance, DocsPageMDXInstanceFrontmatter } from '../definitions/interfaces'
import type { SidebarItemProps } from '../definitions/props'
import { mapDirName } from '../utils/fs.utils'
import { SidebarItem } from './SidebarItem'

const globs = await Astro.glob<DocsPageMDXInstanceFrontmatter>('../pages/docs/**/*.mdx')

async function getItems(folders: string[] = ['docs']): Promise<SidebarItemProps[]> {
  let dirs: Dirent[], items: SidebarItemProps[]

  dirs = await readdir(concatURL(process.env.PWD ?? '', 'src/pages', folders.join('/')), { withFileTypes: true })
  items = []

  for (let dir of dirs) {
    let item: SidebarItemProps

    if (dir.isDirectory()) {
      item = {
        href: concatURL('/', folders.join('/'), dir.name),
        items: await getItems([...folders, dir.name]),
        title: mapDirName(dir.name)
      }

      item.expanded = Astro.url.pathname.includes(item.href)

      items.push(item)
    }

    if (dir.isFile()) {
      let glob: DocsPageMDXInstance | undefined

      glob = globs.find((glob: DocsPageMDXInstance) => glob.file.includes(concatURL(folders.join('/'), dir.name)))
      if (!glob) continue

      item = {
        href: concatURL('/', folders.join('/'), dir.name).replace('.mdx', ''),
        title: glob.frontmatter.title
      }

      item.active = item.href === Astro.url.pathname

      items.push(item)
    }
  }

  return items
}

const items: SidebarItemProps[] = await getItems()
---

<div class='w-72 max-h-screen-minus-header hidden xl:flex flex-col p-4 overflow-y-auto border-r-2 border-slate-800' style='min-height: calc(100vh - 96px)'>
  {items.map((props: SidebarItemProps) => <SidebarItem {...props} client:load />)}
</div>
