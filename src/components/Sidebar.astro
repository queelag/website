---
import type { DocsPageMDXInstance, DocsPageMDXInstanceFrontmatter } from '../definitions/interfaces'
import type { SidebarItemProps } from '../definitions/props'
import { SidebarItem } from './SidebarItem'

const files = await Astro.glob<DocsPageMDXInstanceFrontmatter>('../pages/docs/**/*.mdx')

function transformFilesToItems(folder: string): SidebarItemProps[] {
  return files
    .filter((file: DocsPageMDXInstance) => file.url?.startsWith(folder))
    .map((file: DocsPageMDXInstance) => ({
      href: file.url,
      title: file.frontmatter.title
    }))
}

const items: SidebarItemProps[] = [
  {
    items: [
      {
        items: transformFilesToItems('/docs/core/functions'),
        _key: 'core-functions',
        title: 'Functions'
      },
      {
        items: transformFilesToItems('/docs/core/modules'),
        _key: 'core-modules',
        title: 'Modules'
      },
      {
        items: transformFilesToItems('/docs/core/utils'),
        _key: 'core-installation',
        title: 'Utils'
      },
      {
        href: '/docs/core/installation',
        title: 'Installation'
      }
    ],
    _key: 'core',
    title: 'Core'
  },
  {
    items: [
      {
        items: [
          {
            items: transformFilesToItems('/docs/state-manager/react/hooks'),
            _key: 'state-manager-react-hooks',
            title: 'Hooks'
          }
        ],
        _key: 'state-manager-react',
        title: 'React'
      }
    ],
    _key: 'state-manager',
    title: 'State Manager'
  }
]
---

<div class='w-72 max-h-screen-minus-header hidden xl:flex flex-col p-4 overflow-y-auto border-r-2 border-slate-800' style='min-height: calc(100vh - 96px)'>
  {items.map((props: SidebarItemProps) => <SidebarItem {...props} client:load />)}
</div>
